import os
import shutil
import logging

logger = logging.getLogger(__name__)


def normalize_directory_structure(temp_dir: str) -> None:
    """Normalize directory structure by removing duplicates and fixing paths."""
    file_mapping = {}

    for root, _, files in os.walk(temp_dir):
        for file in files:
            full_path = os.path.join(root, file)
            rel_path = os.path.relpath(full_path, temp_dir)
            path_parts = rel_path.split(os.sep)

            if "com" in path_parts:
                last_com_index = len(path_parts) - 1 - path_parts[::-1].index("com")
                path_parts = path_parts[last_com_index:]

            correct_path = os.path.join(temp_dir, *path_parts)

            if file.endswith('.class'):
                if correct_path not in file_mapping:
                    file_mapping[correct_path] = full_path
            else:
                if correct_path in file_mapping:
                    if os.path.getmtime(full_path) > os.path.getmtime(file_mapping[correct_path]):
                        file_mapping[correct_path] = full_path
                else:
                    file_mapping[correct_path] = full_path

    # Move files to correct locations
    for correct_path, current_path in file_mapping.items():
        if correct_path != current_path:
            try:
                os.makedirs(os.path.dirname(correct_path), exist_ok=True)
                shutil.copy2(current_path, correct_path)
                if current_path != correct_path:
                    os.remove(current_path)
            except Exception as e:
                logger.error(f"Error moving file {current_path} to {correct_path}: {e}")

    # Clean empty directories
    for root, dirs, _ in os.walk(temp_dir, topdown=False):
        for dir_name in dirs:
            try:
                dir_path = os.path.join(root, dir_name)
                if not os.listdir(dir_path):
                    os.rmdir(dir_path)
            except Exception as e:
                logger.error(f"Error removing empty directory {dir_path}: {e}")
